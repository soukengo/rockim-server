// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.0
// source: rockim/service/group/v1/group.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	service "rockimserver/apis/rockim/service"
	types "rockimserver/apis/rockim/service/group/v1/types"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GroupIdFindRequest 查询群组id请求
type GroupIdFindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基础参数
	Base *service.ServiceRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// 自定义群组id
	BizId string `protobuf:"bytes,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
}

func (x *GroupIdFindRequest) Reset() {
	*x = GroupIdFindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rockim_service_group_v1_group_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupIdFindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupIdFindRequest) ProtoMessage() {}

func (x *GroupIdFindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rockim_service_group_v1_group_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupIdFindRequest.ProtoReflect.Descriptor instead.
func (*GroupIdFindRequest) Descriptor() ([]byte, []int) {
	return file_rockim_service_group_v1_group_proto_rawDescGZIP(), []int{0}
}

func (x *GroupIdFindRequest) GetBase() *service.ServiceRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GroupIdFindRequest) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

// GroupIdFindResponse 查询群组Id响应
type GroupIdFindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GroupIdFindResponse) Reset() {
	*x = GroupIdFindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rockim_service_group_v1_group_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupIdFindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupIdFindResponse) ProtoMessage() {}

func (x *GroupIdFindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rockim_service_group_v1_group_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupIdFindResponse.ProtoReflect.Descriptor instead.
func (*GroupIdFindResponse) Descriptor() ([]byte, []int) {
	return file_rockim_service_group_v1_group_proto_rawDescGZIP(), []int{1}
}

func (x *GroupIdFindResponse) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

// GroupFindRequest 查询群组请求
type GroupFindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基础参数
	Base *service.ServiceRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// 自定义群组id
	BizId string `protobuf:"bytes,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
}

func (x *GroupFindRequest) Reset() {
	*x = GroupFindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rockim_service_group_v1_group_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupFindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupFindRequest) ProtoMessage() {}

func (x *GroupFindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rockim_service_group_v1_group_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupFindRequest.ProtoReflect.Descriptor instead.
func (*GroupFindRequest) Descriptor() ([]byte, []int) {
	return file_rockim_service_group_v1_group_proto_rawDescGZIP(), []int{2}
}

func (x *GroupFindRequest) GetBase() *service.ServiceRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GroupFindRequest) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

// GroupFindResponse 查询群组响应
type GroupFindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *types.Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupFindResponse) Reset() {
	*x = GroupFindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rockim_service_group_v1_group_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupFindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupFindResponse) ProtoMessage() {}

func (x *GroupFindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rockim_service_group_v1_group_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupFindResponse.ProtoReflect.Descriptor instead.
func (*GroupFindResponse) Descriptor() ([]byte, []int) {
	return file_rockim_service_group_v1_group_proto_rawDescGZIP(), []int{3}
}

func (x *GroupFindResponse) GetGroup() *types.Group {
	if x != nil {
		return x.Group
	}
	return nil
}

// GroupFindRequest 根据id查询群组请求
type GroupFindByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基础参数
	Base *service.ServiceRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	// 群组id
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GroupFindByIdRequest) Reset() {
	*x = GroupFindByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rockim_service_group_v1_group_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupFindByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupFindByIdRequest) ProtoMessage() {}

func (x *GroupFindByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rockim_service_group_v1_group_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupFindByIdRequest.ProtoReflect.Descriptor instead.
func (*GroupFindByIdRequest) Descriptor() ([]byte, []int) {
	return file_rockim_service_group_v1_group_proto_rawDescGZIP(), []int{4}
}

func (x *GroupFindByIdRequest) GetBase() *service.ServiceRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GroupFindByIdRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

// GroupFindResponse 根据id查询群组响应
type GroupFindByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *types.Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupFindByIdResponse) Reset() {
	*x = GroupFindByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rockim_service_group_v1_group_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupFindByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupFindByIdResponse) ProtoMessage() {}

func (x *GroupFindByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rockim_service_group_v1_group_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupFindByIdResponse.ProtoReflect.Descriptor instead.
func (*GroupFindByIdResponse) Descriptor() ([]byte, []int) {
	return file_rockim_service_group_v1_group_proto_rawDescGZIP(), []int{5}
}

func (x *GroupFindByIdResponse) GetGroup() *types.Group {
	if x != nil {
		return x.Group
	}
	return nil
}

var File_rockim_service_group_v1_group_proto protoreflect.FileDescriptor

var file_rockim_service_group_v1_group_proto_rawDesc = []byte{
	0x0a, 0x23, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x17,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x72, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x46, 0x69, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x40, 0x52, 0x05, 0x62,
	0x69, 0x7a, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x13, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x46,
	0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69,
	0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18,
	0x40, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72,
	0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x78, 0x0a, 0x14, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x18, 0x40, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x15, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6e, 0x64,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x6f,
	0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0xbe, 0x02, 0x0a, 0x08, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x50, 0x49, 0x12, 0x68, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x2b, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2c, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5d, 0x0a, 0x04, 0x46, 0x69, 0x6e, 0x64, 0x12, 0x29, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69,
	0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2d, 0x2e, 0x72, 0x6f, 0x63,
	0x6b, 0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x72, 0x6f, 0x63, 0x6b,
	0x69, 0x6d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2e, 0x5a, 0x2c, 0x72, 0x6f, 0x63,
	0x6b, 0x69, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x72,
	0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_rockim_service_group_v1_group_proto_rawDescOnce sync.Once
	file_rockim_service_group_v1_group_proto_rawDescData = file_rockim_service_group_v1_group_proto_rawDesc
)

func file_rockim_service_group_v1_group_proto_rawDescGZIP() []byte {
	file_rockim_service_group_v1_group_proto_rawDescOnce.Do(func() {
		file_rockim_service_group_v1_group_proto_rawDescData = protoimpl.X.CompressGZIP(file_rockim_service_group_v1_group_proto_rawDescData)
	})
	return file_rockim_service_group_v1_group_proto_rawDescData
}

var file_rockim_service_group_v1_group_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_rockim_service_group_v1_group_proto_goTypes = []interface{}{
	(*GroupIdFindRequest)(nil),     // 0: rockim.service.group.v1.GroupIdFindRequest
	(*GroupIdFindResponse)(nil),    // 1: rockim.service.group.v1.GroupIdFindResponse
	(*GroupFindRequest)(nil),       // 2: rockim.service.group.v1.GroupFindRequest
	(*GroupFindResponse)(nil),      // 3: rockim.service.group.v1.GroupFindResponse
	(*GroupFindByIdRequest)(nil),   // 4: rockim.service.group.v1.GroupFindByIdRequest
	(*GroupFindByIdResponse)(nil),  // 5: rockim.service.group.v1.GroupFindByIdResponse
	(*service.ServiceRequest)(nil), // 6: rockim.service.ServiceRequest
	(*types.Group)(nil),            // 7: rockim.service.group.v1.types.Group
}
var file_rockim_service_group_v1_group_proto_depIdxs = []int32{
	6, // 0: rockim.service.group.v1.GroupIdFindRequest.base:type_name -> rockim.service.ServiceRequest
	6, // 1: rockim.service.group.v1.GroupFindRequest.base:type_name -> rockim.service.ServiceRequest
	7, // 2: rockim.service.group.v1.GroupFindResponse.group:type_name -> rockim.service.group.v1.types.Group
	6, // 3: rockim.service.group.v1.GroupFindByIdRequest.base:type_name -> rockim.service.ServiceRequest
	7, // 4: rockim.service.group.v1.GroupFindByIdResponse.group:type_name -> rockim.service.group.v1.types.Group
	0, // 5: rockim.service.group.v1.GroupAPI.FindGroupId:input_type -> rockim.service.group.v1.GroupIdFindRequest
	2, // 6: rockim.service.group.v1.GroupAPI.Find:input_type -> rockim.service.group.v1.GroupFindRequest
	4, // 7: rockim.service.group.v1.GroupAPI.FindById:input_type -> rockim.service.group.v1.GroupFindByIdRequest
	1, // 8: rockim.service.group.v1.GroupAPI.FindGroupId:output_type -> rockim.service.group.v1.GroupIdFindResponse
	3, // 9: rockim.service.group.v1.GroupAPI.Find:output_type -> rockim.service.group.v1.GroupFindResponse
	5, // 10: rockim.service.group.v1.GroupAPI.FindById:output_type -> rockim.service.group.v1.GroupFindByIdResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_rockim_service_group_v1_group_proto_init() }
func file_rockim_service_group_v1_group_proto_init() {
	if File_rockim_service_group_v1_group_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rockim_service_group_v1_group_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupIdFindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rockim_service_group_v1_group_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupIdFindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rockim_service_group_v1_group_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupFindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rockim_service_group_v1_group_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupFindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rockim_service_group_v1_group_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupFindByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rockim_service_group_v1_group_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupFindByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rockim_service_group_v1_group_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rockim_service_group_v1_group_proto_goTypes,
		DependencyIndexes: file_rockim_service_group_v1_group_proto_depIdxs,
		MessageInfos:      file_rockim_service_group_v1_group_proto_msgTypes,
	}.Build()
	File_rockim_service_group_v1_group_proto = out.File
	file_rockim_service_group_v1_group_proto_rawDesc = nil
	file_rockim_service_group_v1_group_proto_goTypes = nil
	file_rockim_service_group_v1_group_proto_depIdxs = nil
}
