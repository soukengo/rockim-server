// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.0
// source: rockim/api/client/v1/types/message.proto

package types

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	enums "rockimserver/apis/rockim/shared/enums"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TargetID 目标ID
type TargetID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 目标类型
	Category enums.MessageTarget_Category `protobuf:"varint,1,opt,name=category,proto3,enum=rockim.shared.enums.MessageTarget_Category" json:"category,omitempty"`
	// 值（群聊为customGroupId，私聊为用户account）
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TargetID) Reset() {
	*x = TargetID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rockim_api_client_v1_types_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetID) ProtoMessage() {}

func (x *TargetID) ProtoReflect() protoreflect.Message {
	mi := &file_rockim_api_client_v1_types_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetID.ProtoReflect.Descriptor instead.
func (*TargetID) Descriptor() ([]byte, []int) {
	return file_rockim_api_client_v1_types_message_proto_rawDescGZIP(), []int{0}
}

func (x *TargetID) GetCategory() enums.MessageTarget_Category {
	if x != nil {
		return x.Category
	}
	return enums.MessageTarget_UNKNOWN
}

func (x *TargetID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// IMMessage 消息
type IMMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 所属应用
	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// 消息ID
	MsgId string `protobuf:"bytes,2,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
	// 消息发送者
	Sender *IMMessageSender `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	// 目标ID
	Target *TargetID `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	// 消息主体
	Body *IMMessageBody `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	// 消息序号
	Sequence int64 `protobuf:"varint,7,opt,name=sequence,proto3" json:"sequence,omitempty"`
	// 消息状态
	Status enums.Message_Status `protobuf:"varint,8,opt,name=status,proto3,enum=rockim.shared.enums.Message_Status" json:"status,omitempty"`
	// 消息版本号
	Version int64 `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *IMMessage) Reset() {
	*x = IMMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rockim_api_client_v1_types_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessage) ProtoMessage() {}

func (x *IMMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rockim_api_client_v1_types_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessage.ProtoReflect.Descriptor instead.
func (*IMMessage) Descriptor() ([]byte, []int) {
	return file_rockim_api_client_v1_types_message_proto_rawDescGZIP(), []int{1}
}

func (x *IMMessage) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *IMMessage) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *IMMessage) GetSender() *IMMessageSender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *IMMessage) GetTarget() *TargetID {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *IMMessage) GetBody() *IMMessageBody {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *IMMessage) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *IMMessage) GetStatus() enums.Message_Status {
	if x != nil {
		return x.Status
	}
	return enums.Message_SENDING
}

func (x *IMMessage) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// IMMessageBody 消息主体
type IMMessageBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 消息发送时间
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// 客户端的消息ID
	ClientMsgId string `protobuf:"bytes,2,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`
	// 消息类型
	MessageType enums.Message_MessageType `protobuf:"varint,3,opt,name=message_type,json=messageType,proto3,enum=rockim.shared.enums.Message_MessageType" json:"message_type,omitempty"`
	// 消息内容
	Content []byte `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	// 透传数据
	Payload map[string]string `protobuf:"bytes,5,rep,name=payload,proto3" json:"payload,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *IMMessageBody) Reset() {
	*x = IMMessageBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rockim_api_client_v1_types_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageBody) ProtoMessage() {}

func (x *IMMessageBody) ProtoReflect() protoreflect.Message {
	mi := &file_rockim_api_client_v1_types_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageBody.ProtoReflect.Descriptor instead.
func (*IMMessageBody) Descriptor() ([]byte, []int) {
	return file_rockim_api_client_v1_types_message_proto_rawDescGZIP(), []int{2}
}

func (x *IMMessageBody) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *IMMessageBody) GetClientMsgId() string {
	if x != nil {
		return x.ClientMsgId
	}
	return ""
}

func (x *IMMessageBody) GetMessageType() enums.Message_MessageType {
	if x != nil {
		return x.MessageType
	}
	return enums.Message_TEXT
}

func (x *IMMessageBody) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *IMMessageBody) GetPayload() map[string]string {
	if x != nil {
		return x.Payload
	}
	return nil
}

// IMMessageSender 消息发送者
type IMMessageSender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 发送者账号
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// 发送者名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 发送者头像
	AvatarUrl string `protobuf:"bytes,3,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
}

func (x *IMMessageSender) Reset() {
	*x = IMMessageSender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rockim_api_client_v1_types_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessageSender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessageSender) ProtoMessage() {}

func (x *IMMessageSender) ProtoReflect() protoreflect.Message {
	mi := &file_rockim_api_client_v1_types_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessageSender.ProtoReflect.Descriptor instead.
func (*IMMessageSender) Descriptor() ([]byte, []int) {
	return file_rockim_api_client_v1_types_message_proto_rawDescGZIP(), []int{3}
}

func (x *IMMessageSender) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *IMMessageSender) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IMMessageSender) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

// IMMessagePacket 消息包
type IMMessagePacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*IMMessage `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *IMMessagePacket) Reset() {
	*x = IMMessagePacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rockim_api_client_v1_types_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IMMessagePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IMMessagePacket) ProtoMessage() {}

func (x *IMMessagePacket) ProtoReflect() protoreflect.Message {
	mi := &file_rockim_api_client_v1_types_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IMMessagePacket.ProtoReflect.Descriptor instead.
func (*IMMessagePacket) Descriptor() ([]byte, []int) {
	return file_rockim_api_client_v1_types_message_proto_rawDescGZIP(), []int{4}
}

func (x *IMMessagePacket) GetList() []*IMMessage {
	if x != nil {
		return x.List
	}
	return nil
}

var File_rockim_api_client_v1_types_message_proto protoreflect.FileDescriptor

var file_rockim_api_client_v1_types_message_proto_rawDesc = []byte{
	0x0a, 0x28, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x72, 0x6f, 0x63, 0x6b,
	0x69, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x21, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x7c, 0x0a, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x12, 0x51,
	0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2b, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xf6, 0x02, 0x0a, 0x09, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x73, 0x67, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x6f, 0x63, 0x6b,
	0x69, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x23, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc6, 0x02, 0x0a, 0x0d, 0x49, 0x4d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x4b, 0x0a,
	0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x50, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6f, 0x64, 0x79,
	0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x3a, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x5e, 0x0a, 0x0f, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55,
	0x72, 0x6c, 0x22, 0x4c, 0x0a, 0x0f, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x49, 0x4d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x42, 0x51, 0x5a, 0x32, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x3b, 0x74, 0x79, 0x70, 0x65, 0x73, 0xaa, 0x02, 0x1a, 0x52, 0x6f, 0x63, 0x6b, 0x49, 0x4d, 0x2e,
	0x41, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x31, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rockim_api_client_v1_types_message_proto_rawDescOnce sync.Once
	file_rockim_api_client_v1_types_message_proto_rawDescData = file_rockim_api_client_v1_types_message_proto_rawDesc
)

func file_rockim_api_client_v1_types_message_proto_rawDescGZIP() []byte {
	file_rockim_api_client_v1_types_message_proto_rawDescOnce.Do(func() {
		file_rockim_api_client_v1_types_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_rockim_api_client_v1_types_message_proto_rawDescData)
	})
	return file_rockim_api_client_v1_types_message_proto_rawDescData
}

var file_rockim_api_client_v1_types_message_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_rockim_api_client_v1_types_message_proto_goTypes = []interface{}{
	(*TargetID)(nil),                  // 0: rockim.api.client.v1.types.TargetID
	(*IMMessage)(nil),                 // 1: rockim.api.client.v1.types.IMMessage
	(*IMMessageBody)(nil),             // 2: rockim.api.client.v1.types.IMMessageBody
	(*IMMessageSender)(nil),           // 3: rockim.api.client.v1.types.IMMessageSender
	(*IMMessagePacket)(nil),           // 4: rockim.api.client.v1.types.IMMessagePacket
	nil,                               // 5: rockim.api.client.v1.types.IMMessageBody.PayloadEntry
	(enums.MessageTarget_Category)(0), // 6: rockim.shared.enums.MessageTarget.Category
	(enums.Message_Status)(0),         // 7: rockim.shared.enums.Message.Status
	(enums.Message_MessageType)(0),    // 8: rockim.shared.enums.Message.MessageType
}
var file_rockim_api_client_v1_types_message_proto_depIdxs = []int32{
	6, // 0: rockim.api.client.v1.types.TargetID.category:type_name -> rockim.shared.enums.MessageTarget.Category
	3, // 1: rockim.api.client.v1.types.IMMessage.sender:type_name -> rockim.api.client.v1.types.IMMessageSender
	0, // 2: rockim.api.client.v1.types.IMMessage.target:type_name -> rockim.api.client.v1.types.TargetID
	2, // 3: rockim.api.client.v1.types.IMMessage.body:type_name -> rockim.api.client.v1.types.IMMessageBody
	7, // 4: rockim.api.client.v1.types.IMMessage.status:type_name -> rockim.shared.enums.Message.Status
	8, // 5: rockim.api.client.v1.types.IMMessageBody.message_type:type_name -> rockim.shared.enums.Message.MessageType
	5, // 6: rockim.api.client.v1.types.IMMessageBody.payload:type_name -> rockim.api.client.v1.types.IMMessageBody.PayloadEntry
	1, // 7: rockim.api.client.v1.types.IMMessagePacket.list:type_name -> rockim.api.client.v1.types.IMMessage
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_rockim_api_client_v1_types_message_proto_init() }
func file_rockim_api_client_v1_types_message_proto_init() {
	if File_rockim_api_client_v1_types_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rockim_api_client_v1_types_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rockim_api_client_v1_types_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rockim_api_client_v1_types_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rockim_api_client_v1_types_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessageSender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rockim_api_client_v1_types_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IMMessagePacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rockim_api_client_v1_types_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rockim_api_client_v1_types_message_proto_goTypes,
		DependencyIndexes: file_rockim_api_client_v1_types_message_proto_depIdxs,
		MessageInfos:      file_rockim_api_client_v1_types_message_proto_msgTypes,
	}.Build()
	File_rockim_api_client_v1_types_message_proto = out.File
	file_rockim_api_client_v1_types_message_proto_rawDesc = nil
	file_rockim_api_client_v1_types_message_proto_goTypes = nil
	file_rockim_api_client_v1_types_message_proto_depIdxs = nil
}
