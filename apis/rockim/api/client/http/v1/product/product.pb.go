// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.0
// source: rockim/api/client/http/v1/product/product.proto

package product

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	v1 "rockimserver/apis/rockim/api/client/http/v1"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ConfigFetchRequest 获取全局配置请求
type ConfigFetchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基本参数
	Base *v1.APIRequest `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
}

func (x *ConfigFetchRequest) Reset() {
	*x = ConfigFetchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rockim_api_client_http_v1_product_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigFetchRequest) ProtoMessage() {}

func (x *ConfigFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rockim_api_client_http_v1_product_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigFetchRequest.ProtoReflect.Descriptor instead.
func (*ConfigFetchRequest) Descriptor() ([]byte, []int) {
	return file_rockim_api_client_http_v1_product_product_proto_rawDescGZIP(), []int{0}
}

func (x *ConfigFetchRequest) GetBase() *v1.APIRequest {
	if x != nil {
		return x.Base
	}
	return nil
}

// ConfigFetchResponse 获取全局配置响应
type ConfigFetchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigFetchResponse) Reset() {
	*x = ConfigFetchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rockim_api_client_http_v1_product_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigFetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigFetchResponse) ProtoMessage() {}

func (x *ConfigFetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rockim_api_client_http_v1_product_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigFetchResponse.ProtoReflect.Descriptor instead.
func (*ConfigFetchResponse) Descriptor() ([]byte, []int) {
	return file_rockim_api_client_http_v1_product_product_proto_rawDescGZIP(), []int{1}
}

var File_rockim_api_client_http_v1_product_product_proto protoreflect.FileDescriptor

var file_rockim_api_client_http_v1_product_product_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x21, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x72, 0x6f, 0x63,
	0x6b, 0x69, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x68,
	0x74, 0x74, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x59, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0x15, 0x0a, 0x13,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x32, 0xb7, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x41,
	0x50, 0x49, 0x12, 0xa8, 0x01, 0x0a, 0x0b, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x35, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x72, 0x6f, 0x63, 0x6b,
	0x69, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x68, 0x74,
	0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x46, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x3a, 0x01, 0x2a, 0x42, 0x3d, 0x5a,
	0x3b, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x72, 0x6f, 0x63, 0x6b, 0x69, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x3b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rockim_api_client_http_v1_product_product_proto_rawDescOnce sync.Once
	file_rockim_api_client_http_v1_product_product_proto_rawDescData = file_rockim_api_client_http_v1_product_product_proto_rawDesc
)

func file_rockim_api_client_http_v1_product_product_proto_rawDescGZIP() []byte {
	file_rockim_api_client_http_v1_product_product_proto_rawDescOnce.Do(func() {
		file_rockim_api_client_http_v1_product_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_rockim_api_client_http_v1_product_product_proto_rawDescData)
	})
	return file_rockim_api_client_http_v1_product_product_proto_rawDescData
}

var file_rockim_api_client_http_v1_product_product_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_rockim_api_client_http_v1_product_product_proto_goTypes = []interface{}{
	(*ConfigFetchRequest)(nil),  // 0: rockim.api.client.http.v1.product.ConfigFetchRequest
	(*ConfigFetchResponse)(nil), // 1: rockim.api.client.http.v1.product.ConfigFetchResponse
	(*v1.APIRequest)(nil),       // 2: rockim.api.client.http.v1.APIRequest
}
var file_rockim_api_client_http_v1_product_product_proto_depIdxs = []int32{
	2, // 0: rockim.api.client.http.v1.product.ConfigFetchRequest.base:type_name -> rockim.api.client.http.v1.APIRequest
	0, // 1: rockim.api.client.http.v1.product.ProductAPI.FetchConfig:input_type -> rockim.api.client.http.v1.product.ConfigFetchRequest
	1, // 2: rockim.api.client.http.v1.product.ProductAPI.FetchConfig:output_type -> rockim.api.client.http.v1.product.ConfigFetchResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rockim_api_client_http_v1_product_product_proto_init() }
func file_rockim_api_client_http_v1_product_product_proto_init() {
	if File_rockim_api_client_http_v1_product_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rockim_api_client_http_v1_product_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigFetchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rockim_api_client_http_v1_product_product_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigFetchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rockim_api_client_http_v1_product_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rockim_api_client_http_v1_product_product_proto_goTypes,
		DependencyIndexes: file_rockim_api_client_http_v1_product_product_proto_depIdxs,
		MessageInfos:      file_rockim_api_client_http_v1_product_product_proto_msgTypes,
	}.Build()
	File_rockim_api_client_http_v1_product_product_proto = out.File
	file_rockim_api_client_http_v1_product_product_proto_rawDesc = nil
	file_rockim_api_client_http_v1_product_product_proto_goTypes = nil
	file_rockim_api_client_http_v1_product_product_proto_depIdxs = nil
}
func (x *ConfigFetchRequest) SetBase(base *v1.APIRequest) {
	if x == nil {
		return
	}
	x.Base = base
}
