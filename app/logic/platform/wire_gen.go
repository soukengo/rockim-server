// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package platform

import (
	"github.com/go-kratos/kratos/v2"
	"rockim/app/logic/platform/biz"
	"rockim/app/logic/platform/conf"
	"rockim/app/logic/platform/data"
	"rockim/app/logic/platform/data/database"
	"rockim/app/logic/platform/server"
	"rockim/app/logic/platform/service"
	"rockim/pkg/component/database/mongo"
	"rockim/pkg/component/discovery"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(env *conf.Env, config *discovery.Config, confServer *conf.Server, mongoConfig *mongo.Config) (*kratos.App, error) {
	client := mongo.NewClient(mongoConfig)
	userData := database.NewUserData(client)
	platUserRepo := data.NewUserRepo(userData)
	platUserUseCase := biz.NewPlatUserUseCase(platUserRepo)
	platUserService := service.NewPlatUserService(platUserUseCase)
	grpcServer := server.NewGRPCServer(confServer, platUserService)
	registrar, err := discovery.NewRegistrar(config)
	if err != nil {
		return nil, err
	}
	app := newApp(env, grpcServer, registrar)
	return app, nil
}
